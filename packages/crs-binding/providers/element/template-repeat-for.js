import"./../../expressions/code-factories/inflation.js";class d{async parse(t,n){const e=t.getAttribute("for").split(" "),a=crs.binding.utils.markElement(t.parentElement,n);t.parentElement.__path=e[2],t.parentElement.__repeat_container=!0,t.parentElement.removeChild(t);const r=await crs.binding.expression.inflationFactory(t,e[0]);crs.binding.inflation.store.add(a,t,r),crs.binding.data.setCallback(a,n.bid,[e[2]],"template[for]")}async update(t){const n=crs.binding.elements[t],i=n.__path,e=crs.binding.data.getDataForElement(n),a=crs.binding.utils.getValueOnPath(e,i);if(a==null)return;const r=crs.binding.inflation.store.get(t),o=document.createDocumentFragment();for(const c of a){const s=r.template.content.cloneNode(!0).firstElementChild;r.fn(s,c),o.appendChild(s)}n.innerHTML="",n.appendChild(o)}}export{d as default};
