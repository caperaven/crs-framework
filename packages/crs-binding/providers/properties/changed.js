class i{#t={};get store(){return this.#t}async parse(t,e){const s=this.#t[e.bid]||={},n=t.name.split(".changed."),r=n[0],o=n[1];(s[r]||=[]).push(await this.getIntent(t.value,o))}async getIntent(t,e){const s=`.${e}`;return(await crs.binding.providers.getAttrProvider(s)).getIntent(t)}async update(t,e){if(this.#t[t]==null||this.#t[t][e]==null)return;const s=this.#t[t][e];for(const n of s)await(await crs.binding.providers.getAttrProvider(n.provider)).onEvent?.(event,t,n)}async clear(t){d;const e=this.#t[t];delete this.#t[t],crs.binding.utils.disposeProperties(e)}}export{i as default};
