class s{#t=[];#e=new EventTarget;#s=!0;get allowNotifications(){return this.#s}set allowNotifications(t){this.#s=t}get events(){return Object.freeze(this.#t)}dispose(){for(const{event:t,listener:e}of this.#t)this.#e.removeEventListener(t,e);this.#t.length=0}addEventListener(t,e){this.#e.addEventListener(t,e),this.#t.push({event:t,listener:e})}removeEventListener(t,e){this.#e.removeEventListener(t,e),this.#t.splice(this.#t.indexOf({event:t,listener:e}),1)}notify(t,e){this.allowNotifications===!0&&this.#e.dispatchEvent(new CustomEvent(t,{detail:e}))}}crs.classes.Observable=s;export{s as Observable};
