import{ensureOptions as e}from"./dragdrop-manager/options.js";import{applyPlaceholder as i}from"./dragdrop-manager/placeholder.js";import{drop as h,allowDrop as r}from"./dragdrop-manager/drop.js";import{startDrag as l,updateDrag as n}from"./dragdrop-manager/drag.js";import{getDraggable as a}from"./dragdrop-manager/drag-utils.js";import{updateMarker as o}from"./dragdrop-manager/marker.js";import{startMarker as u}from"./dragdrop-manager/marker.js";class P{#u;#t;#l;#d;#n;#e;#i;#s;#m;#g;#p;#c;#h;#f;#a;#o;#D=[];#r;get element(){return this.#t}get updateDragHandler(){return this.#a}get updateMarkerHandler(){return this.#o}get dragElement(){return this.#e}get movePoint(){return this.#h}get startPoint(){return this.#c}get target(){return this.#l}get marker(){return this.#i}get lastTarget(){return this.#d}set lastTarget(t){this.#d=t}get boundsCache(){return this.#D}get composedPath(){return this.#r}constructor(t,s){this.#t=t,this.#t.style.userSelect="none",this.#s=e(s),this.#m=this.#w.bind(this),this.#g=this.#P.bind(this),this.#p=this.#v.bind(this),this.#u=this.#t.shadowRoot==null?this.#t:this.#t.shadowRoot,this.#u.addEventListener("mousedown",this.#m),this.#t.__dragDropManager=this}dispose(){this.#u.removeEventListener("mousedown",this.#m),this.#u=null,this.#t=null,this.#d=null,this.#s=null,this.#m=null,this.#g=null,this.#p=null,this.#c=null,this.#h=null,this.#n=null,this.#e=null,this.#f=null,this.#a=null,this.#o=null,this.#l=null,this.#i=null,this.#r=null,this.#D=null}async#w(t){if(t.preventDefault(),this.#r=t.composedPath(),this.#f==!0)return;this.#c={x:t.clientX,y:t.clientY},this.#h={x:t.clientX,y:t.clientY};const s=a(t,this.#s);s!=null&&(this.#t.dataset.dragging=!0,this.#n=await i(s,this.#s),this.#e=await l(s,this.#s),this.#l=this.#n,document.addEventListener("mousemove",this.#g),document.addEventListener("mouseup",this.#p),this.#a=n.bind(this),this.#a(),this.#i=await u.call(this,this.#e),this.#o=o.bind(this),this.#o())}async#P(t){t.preventDefault(),this.#r=t.composedPath(),this.#h.x=t.clientX,this.#h.y=t.clientY,this.#l=t.target||t.composedPath()[0]}async#v(t){this.#f=!0,t.preventDefault(),this.#r=t.composedPath(),this.#a=null,this.#o=null,this.#h=null,this.#c=null,document.removeEventListener("mousemove",this.#g),document.removeEventListener("mouseup",this.#p),this.#i&&(this.#i.remove(),this.#i=null),await h.call(this,this.#e,this.#n,this.#s),this.#e=null,this.#n=null,this.#l=null,this.#f=!1,this.#d=null;for(const s of this.#D)s._bounds=null;this.#D.length=0,delete this.#s.currentAction,this.#r=null,delete this.#t.dataset.dragging}async validateDropTarget(t){return this.#s.currentAction="hover",r.call(this,t,this.#s)}}export{P as DragDropManager};
