class a{#t;#s;#i;#n;#a=1;#m=1;#d=[];#p=[];#h=this.#f.bind(this);#r=this.#x.bind(this);#u=this.#g.bind(this);#c=this.#z.bind(this);#o;#l;#e;constructor(t,s){this.#t=t,this.#s=t.getBoundingClientRect(),this.#t.__cssGridResizeMananger=this,this.#n=s}dispose(){(this.#t.shadowRoot||this.#t).removeEventListener("mousedown",this.#h),this.#t.__cssGridResizeMananger=null,this.#t=null,this.#i=null,this.#n=null,this.#a=null,this.#m=null,this.#d=null,this.#p=null,this.#h=null,this.#r=null,this.#u=null,this.#c=null,this.#o=null,this.#l=null,this.#e=null,this.#s=null}async initialize(){this.#t.style.position="relative",this.#i=await crs.call("cssgrid","get_column_sizes",{element:this.#t}),this.#a=await crs.call("cssgrid","row_count",{element:this.#t}),this.#m=await crs.call("cssgrid","column_count",{element:this.#t}),await this.#y(),await this.#w(),(this.#t.shadowRoot||this.#t).addEventListener("mousedown",this.#h)}async#y(){const t=this.#t;let s=this.#i.map(i=>`${i}px`);s[s.length-1]="1fr",s=s.join(" "),await crs.call("cssgrid","set_columns",{element:t,columns:s})}async#w(){if(this.#n.columns==null){this.#n.columns=[];for(let t=0;t<this.#a;t++)this.#n.columns.push(t)}for(let t of this.#n.columns){const s=l(t,this.#i);this.#d.push(await o(t,s,this.#a,this.#t.shadowRoot||this.#t))}}async#f(t){t.target.dataset.type=="resize-column"&&(this.#o={x:t.clientX-this.#s.x,y:t.clientY-this.#s.y},this.#l={x:t.clientX-this.#s.x,y:t.clientY-this.#s.y},this.#e=t.target,t.target.style.background="silver",document.addEventListener("mousemove",this.#r),document.addEventListener("mouseup",this.#u),t.preventDefault(),this.#c())}async#x(t){this.#l.x=t.clientX-this.#s.x-4,this.#l.y=t.clientY-this.#s.y-4,t.preventDefault()}async#g(t){const s={x:t.clientX-this.#o.x-this.#s.x-4,y:t.clientY-this.#o.y-this.#s.y-4},i=Number(this.#e.dataset.column);this.#e.style.background="transparent",document.removeEventListener("mousemove",this.#r),document.removeEventListener("mouseup",this.#u),this.#e=null,this.#o=null,this.#l=null,t.preventDefault(),await this.#_(i,s)}async#z(){if(this.#e==null)return;const t=this.#l.x;this.#e.style.translate=`${t}px`,requestAnimationFrame(this.#c)}async#_(t,s){let i=this.#i[t]+s.x+4;this.#i[t]=i,await crs.call("cssgrid","set_column_width",{element:this.#t,position:t,width:`${i}px`}),await this.#b()}async#b(){const t=this.#t.querySelectorAll('[data-type="resize-column"]');for(const s of t){const i=Number(s.dataset.column),n=l(i,this.#i);s.style.translate=`${n}px`}}}async function o(e,t,s,i){const n=await crs.call("dom","create_element",{tag_name:"div",styles:{position:"absolute",top:0,bottom:0,left:0,width:"8px",background:"transparent",translate:`${t-4}px 0`,cursor:"col-resize"},dataset:{column:e,type:"resize-column"}});return i.appendChild(n),n}function l(e,t){let s=0;for(let i=0;i<=e;i++)s+=t[i];return s-4}export{a as CSSGridResizeManager};
