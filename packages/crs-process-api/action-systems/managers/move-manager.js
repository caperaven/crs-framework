class o{#t;#n;#h;#o;#s;#e;#i;constructor(t,s){this.#t=t,this.#s=s,this.#n=this.#u.bind(this),this.#h=this.#r.bind(this),this.#o=this.#a.bind(this),this.#t.style.position="fixed",this.#t.style.left=0,this.#t.style.top=0,this.#t.addEventListener("mousedown",this.#n),t.__moveManager=this}dispose(){this.#t.removeEventListener("mousedown",this.#n),this.#n=null,this.#h=null,this.#o=null,this.#s=null,this.#e=null,this.#i=null,delete this.#t.__moveManager,this.#t=null}#l(t){const s=t.composedPath(),e=s[0];return this.#s==null?e===this.#t:e.matches(this.#s)?!0:s.find(i=>i.matches&&i.matches(this.#s))!=null}async#u(t){this.#l(t)!==!1&&(t.preventDefault(),this.#e={x:t.clientX,y:t.clientY},this.#i=this.#t.getBoundingClientRect(),document.addEventListener("mousemove",this.#h),document.addEventListener("mouseup",this.#o))}async#r(t){let s=t.clientX-this.#e.x,e=t.clientY-this.#e.y;this.#t.style.translate=`${this.#i.x+s}px ${this.#i.y+e}px`}async#a(t){document.removeEventListener("mousemove",this.#h),document.removeEventListener("mouseup",this.#o),this.#e=null,this.#i=null}}export{o as MoveManager};
