class g{static async perform(a,r,t,s){await this[a.action](a,r,t,s)}static async observe(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s),c=await crs.process.getValue(a.args.properties,r,t,s),n=await crs.process.getValue(a.args.callback,r,t,s);e._dataId==null&&(e._dataId=crsbinding.data.addObject(e.id));let l=e._dataId;e._processObserver=e._processObserver||{nextId:0};const o=u(e);e._processObserver[o]={properties:c,eval:b(e,c,o),callback:n};for(let d of c)crsbinding.data.addCallback(l,d,e._processObserver[o].eval);return a.args.target!=null&&await crs.process.setValue(a.args.target,o,r,t,s),o}static async unobserve(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s),c=await crs.process.getValue(a.args.ids,r,t,s);for(let n of c){n=await crs.process.getValue(n,r,t,s);const l=e._processObserver[n];for(const o of l.properties)crsbinding.data.removeCallback(e._dataId,o,l.eval);l.properties=null,l.eval=null,l.callback=null,delete e._processObserver[n]}}static async notify_ready(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s);e.dataset.ready="true",delete e.dataset.loading,e.dispatchEvent(new CustomEvent("ready",{bubbles:!0,composed:!0}))}static async notify_loading(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s);e.dataset.loading="true",e.dispatchEvent(new CustomEvent("loading",{bubbles:!0,composed:!0}))}static async on_ready(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s),c=await crs.process.getValue(a.args.callback,r,t,s),n=await crs.process.getValue(a.args.caller,r,t,s);if(e.dataset.ready=="true")return await c.call(n);const l=async()=>{e.removeEventListener("ready",l),await c.call(n)};e.addEventListener("ready",l)}static async on_loading(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s),c=await crs.process.getValue(a.args.callback,r,t,s),n=await crs.process.getValue(a.args.caller,r,t,s);if(e.dataset.loading=="true")return await c.call(n);const l=async()=>{e.removeEventListener("loading",l),await c.call(n)};e.addEventListener("loading",l)}static async wait_for_element_render(a,r,t,s){const e=await crs.dom.get_element(a.args.element,r,t,s);return e.offsetWidth>0&&e.offsetHeight>0?!0:new Promise(c=>{const n=new ResizeObserver(()=>{e.offsetWidth>0&&e.offsetHeight>0&&(n.disconnect(),c(!0))});n.observe(e)})}}function u(i){const a=i._processObserver.nextId;return i._processObserver.nextId=a+1,a}function b(i,a,r){let t=["if ( "];for(const e of a)t.push(`crsbinding.data.getProperty(this._dataId, "${e}")  != null && `);return t.push(`) { this._processObserver[${r}].callback.call(this) };`),t=t.join("").replace("&& )",")"),new Function(t).bind(i)}crs.intent.component=g;export{g as ComponentActions};
