class p{static async perform(a,t,e,n){await this[a.action]?.(a,t,e,n)}static async set_widget(a,t,e,n){const r=a.args.element,i=await _(a,t,e,n),o=await crs.process.getValue(a.args.context,t,e,n)||e?.parameters?.bId;await crsbinding.events.emitter.postMessage(r,{context:o,html:i})}static async clear_widget(a,t,e,n){const r=a.args.element;if(await crsbinding.events.emitter.postMessage(r,{context:null,html:""}),e?.bindable==!0){let i=crsbinding.data.getContext(e.parameters.bId);delete i.pass,delete i.fail}}static async create_inflation_template(a,t,e,n){const r=await crs.process.getValue(a.args.template_id,t,e,n),i=await crs.process.getValue(a.args.source,t,e,n),o=await crs.process.getValue(a.args.tag_name,t,e,n),d=await crs.process.getValue(a.args.wrapper,t,e,n),m=await crs.process.getValue(a.args.ctx,t,e,n),u=Object.keys(i),s=document.createElement("template");let g=s;if(d!=null){const c=await crs.call("dom","create_element",d,t,e,n);s.content.appendChild(c),g=c}for(let c of u){let f=i[c];f.tag_name||=o;let w=await crs.call("dom","create_element",f,t,e,n);w.textContent=["${",c,"}"].join(""),g.content!=null?g.content.appendChild(w):g.appendChild(w)}await crsbinding.inflationManager.register(r,s,m||"context")}static async elements_from_template(a,t,e,n){const r=await crs.process.getValue(a.args.template_id,t,e,n),i=await crs.process.getValue(a.args.template,t,e,n),o=await crs.process.getValue(a.args.data,t,e,n),d=await crs.process.getValue(a.args.remove_template,t,e,n),m=await crs.process.getValue(a.args.recycle,t,e,n),u=await crs.process.getValue(a.args.row_index,t,e,n);let s=await crs.process.getValue(a.args.parent,t,e,n);s=await crs.dom.get_element(s,t,e,n),i!=null&&await b(i,r);let g=null;s!=null&&(m!=!1&&s.childElementCount>0?g=s.children:s.innerHTML="");const c=crsbinding.inflationManager.get(r,o,g,u||0);return c!=null&&s?.appendChild(c),d==!0&&crsbinding.inflationManager.unregister(r),c}static async update_cells(a,t,e,n){return this.elements_from_template(a,t,e,n)}}async function _(l,a){if(l.args.url.indexOf("$fn")!=-1){const t=l.args.url.replace("$fn.",""),e=await a[t](l.args),n=document.createElement("template"),r=l.args.html.split(".")[1];return n.innerHTML=e,crsbinding.templates.add(r,n),e}if(l.args.html.indexOf("$template")==0){const t=l.args.html.split(".")[1];return await crsbinding.templates.get(t,l.args.url)}return await crs.process.getValue(l.args.html,a)}async function b(l,a,t){let e;l instanceof HTMLTemplateElement?e=l:e=document.querySelector(l),await crsbinding.inflationManager.register(a,e)}crs.intent.dom_binding=p;export{p as DomBindingActions};
