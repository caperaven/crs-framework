class r{static async perform(i,t,n,s){await this[i.action]?.(i,t,n,s)}static async set(i,t,n,s){const e=await crs.dom.get_element(i.args.element,t,n,s),a=await crs.process.getValue(i.args.position,t,n,s),c=await crs.process.getValue(i.args.margin||0,t,n,s);e.style.position="fixed",e.style.left=0,e.style.top=0;const l=e.getBoundingClientRect();w[a](e,c,l)}}class w{static"top-left"(i,t){i.style.translate=`${t}px ${t}px`}static"top-center"(i,t,n){const s=window.innerWidth/2-n.width/2,e=t;i.style.translate=`${s}px ${e}px`}static"top-right"(i,t,n){const s=window.innerWidth-n.width-t,e=t;i.style.translate=`${s}px ${e}px`}static"bottom-left"(i,t,n){const s=t,e=window.innerHeight-n.height-t;i.style.translate=`${s}px ${e}px`}static"bottom-center"(i,t,n){const s=window.innerWidth/2-n.width/2,e=window.innerHeight-n.height-t;i.style.translate=`${s}px ${e}px`}static"bottom-right"(i,t,n){const s=window.innerWidth-n.width-t,e=window.innerHeight-n.height-t;i.style.translate=`${s}px ${e}px`}}crs.intent.fixed_position=r;export{r as FixedPositionActions};
